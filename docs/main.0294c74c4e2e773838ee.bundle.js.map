{"version":3,"file":"main.0294c74c4e2e773838ee.bundle.js","sources":["webpack:///./src/components/WidgetOverlay.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Loader from \"./Loader\";\r\n\r\n/**\r\n * WidgetOverlay.js - Returns an overlay for all widgets. Can be in an error or loading state (or neither, but not both).\r\n *\r\n * The widget gradually fades out (`HideBar`) towards the bottom to cope with overflow nicely.\r\n *\r\n * @params {object} error - Defines if the widget is in an error state.\r\n * @params {bool} loading - Defines if the widget is in a loading state.\r\n */\r\nconst WidgetOverlay = ({ error, loading }) => {\r\n  return (\r\n    <Container>\r\n      <Display>\r\n        {error ? (\r\n          <ErrorContainer>\r\n            <Cross />\r\n            <Message>Error</Message>\r\n            <Verbose>{error.message}</Verbose>\r\n          </ErrorContainer>\r\n        ) : loading ? (\r\n          <Loader size={1.5} />\r\n        ) : null}\r\n      </Display>\r\n      <HideBar />\r\n    </Container>\r\n  );\r\n};\r\n\r\nWidgetOverlay.propTypes = {\r\n  error: PropTypes.object,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default WidgetOverlay;\r\n\r\n/**\r\n * Define styles. Positioned to be the layer above the widget.\r\n */\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 98;\r\n`;\r\n\r\nconst Display = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 1rem);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n  text-align: center;\r\n  color: var(--secondary-colour);\r\n  font-family: monospace;\r\n  user-select: none;\r\n`;\r\n\r\nconst Cross = styled.div`\r\n  font-size: 5rem;\r\n  color: crimson;\r\n  line-height: 0.8;\r\n\r\n  &:after {\r\n    content: \"X\";\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Verbose = styled.div`\r\n  font-size: 0.75rem;\r\n`;\r\n\r\n/**\r\n * A small bar that sits at the bottom of the widget, which applies a gradual fade to the widget.\r\n * Uses a linear gradient from transparent ==> the background colour.\r\n */\r\nconst HideBar = styled.div`\r\n  background-image: linear-gradient(\r\n    rgba(0, 0, 0, 0),\r\n    var(--background-colour) 80%\r\n  );\r\n  height: 1rem;\r\n`;\r\n"],"mappings":"AAcA","sourceRoot":""}